var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"DocTestSetup = quote\n    using DataFrames, Distributions, SurvivalAnalysis\nend","category":"page"},{"location":"api/#Modules","page":"API","title":"Modules","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [SurvivalAnalysis]\nOrder   = [:module]","category":"page"},{"location":"api/#Types","page":"API","title":"Types","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [SurvivalAnalysis]\nOrder   = [:type]","category":"page"},{"location":"api/#SurvivalAnalysis.Surv-Tuple{Union{Vector{T}, T} where T<:Number, Union{Vector{T}, T} where T<:Number}","page":"API","title":"SurvivalAnalysis.Surv","text":"Surv(start, stop)\nSurv(time)\nSurv(time, status, type)\n\nThis is the entry point object into survival modelling.\n\n\n\n\n\n","category":"method"},{"location":"api/#Functions","page":"API","title":"Functions","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [SurvivalAnalysis]\nOrder   = [:function]","category":"page"},{"location":"api/#SurvivalAnalysis.cum_hazard-Tuple{Distributions.UnivariateDistribution{S} where S<:Distributions.ValueSupport, Real}","page":"API","title":"SurvivalAnalysis.cum_hazard","text":"cum_hazard(d::UnivariateDistribution, x::Real)\nHₜ(d::UnivariateDistribution, x::Real)\n\nCompute the cumulative hazard function of distribution d at point x.\n\nThe cumulative hazard function for random variable t is defined as\n\n``Hₜ(x) = ∫ˣ hₜ(u) du = -log(Sₜ(x))``\n\nwhere hₜ is the hazard function of t and Sₜ is the survival function of t.\n\nExamples\n\njulia> using Distributions\njulia> cum_hazard(Binomial(5, 0.5), 3)\n1.6739764335716711\n\n\n\n\n\n","category":"method"},{"location":"api/#SurvivalAnalysis.hazard-Tuple{Distributions.UnivariateDistribution{S} where S<:Distributions.ValueSupport, Real}","page":"API","title":"SurvivalAnalysis.hazard","text":"hazard(d::UnivariateDistribution, x::Real)\nhₜ(d::UnivariateDistribution, x::Real)\n\nCompute the hazard function of distribution d at point x.\n\nThe hazard function for random variable t is defined as\n\n``hₜ(x) = fₜ(x)/Sₜ(x)``\n\nwhere fₜ is the pdf of t and Sₜ is the survival function of t.\n\nExamples\n\njulia> using Distributions\njulia> hazard(Binomial(5, 0.5), 3)\n1.6666666666666679\n\n\n\n\n\n","category":"method"},{"location":"api/#Macros-and-Constants","page":"API","title":"Macros and Constants","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [SurvivalAnalysis]\nOrder   = [:macro, :constant]","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"DocTestSetup = quote\n    using DataFrames, Distributions, SurvivalAnalysis\nend","category":"page"},{"location":"examples/#Fitting","page":"Examples","title":"Fitting","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Models can be fit in one of four ways but we only recommend the first.","category":"page"},{"location":"examples/#.-Function-Formula","page":"Examples","title":"1. Function + Formula","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia> using Random\n\njulia> f = kaplan_meier(@formula(Srv(Y, D) ~ 1), DataFrame(Y = randn(10), D = trues(10)))\n\njulia> typeof(f)\nStatsModels.TableStatisticalModel{KaplanMeier, Matrix{Float64}}","category":"page"},{"location":"examples/#.-fit-Formula","page":"Examples","title":"2. fit + Formula","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia> using Random\n\njulia>  f = fit(KaplanMeier, @formula(Srv(Y, D) ~ 1), DataFrame(Y = randn(10), D = trues(10)))\n\njulia> typeof(f)\nStatsModels.TableStatisticalModel{KaplanMeier, Matrix{Float64}}","category":"page"},{"location":"examples/#.-Function-Data","page":"Examples","title":"3. Function + Data","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia> using Random\n\njulia> f = kaplan_meier(hcat(ones(10), 1:10), Surv(randn(MersenneTwister(42), 10)))\n\njulia> typeof(f)\nKaplanMeier","category":"page"},{"location":"examples/#.-fit-Data","page":"Examples","title":"4. fit + Data","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia> using Random\n\njulia> f = fit(KaplanMeier, hcat(ones(10), 1:10), Surv(randn(MersenneTwister(42), 10)))\n\njulia> typeof(f)\nKaplanMeier","category":"page"},{"location":"examples/#Predicting","page":"Examples","title":"Predicting","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"If fitting method (1) or (2) are selected then new data must be given as a DataFrame, otherwise a Matrix is sufficient. We strongly recommend the formula method as this ensures the same covariates and predictors are used in fitting and predicting.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia> using Random\n\njulia> f = kaplan_meier(@formula(Srv(Y, D) ~ 1), DataFrame(Y = randn(10), D = trues(10)))\n\njulia> typeof(f)\nStatsModels.TableStatisticalModel{KaplanMeier, Matrix{Float64}}\n\njulia> predict(f, DataFrame(Y = randn(10), D = trues(10)))","category":"page"},{"location":"#SurvivalAnalysis.jl-Manual","page":"Home","title":"SurvivalAnalysis.jl Manual","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Survival analysis in Julia.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Install the latest version from JuliaRegistries with","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pkg.add(\"SurvivalAnalysis\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Or install the latest stable version from GitHub with","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pkg.add(url=\"https://github.com/RaphaelS1/SurvivalAnalysis.jl.git\")","category":"page"},{"location":"#Package-Features","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Parametric models\nSemi-parametric models\nNonparametric estimators","category":"page"},{"location":"#Upcoming-features","page":"Home","title":"Upcoming features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Bayesian methods\nSurvival metrics (discrimination, calibration, scoring rules)","category":"page"}]
}
